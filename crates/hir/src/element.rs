use std::cell::Cell;

use oxc_syntax::scope::ScopeId;

use crate::{AttributeStore, NodeId, OwnerId};

#[derive(Debug)]
pub struct Element<'hir> {
    pub node_id: NodeId,
    pub owner_id: OwnerId,
    pub name: &'hir str,
    pub node_ids: Vec<NodeId>,
    pub self_closing: bool,
    pub kind: ElementKind,
    pub attributes: AttributeStore<'hir>,
    pub scope_id: Cell<Option<ScopeId>>,
}

impl<'hir> Element<'hir> {
    pub fn new(owner_id: OwnerId, node_id: NodeId, name: &'hir str, self_closing: bool) -> Self {
        Self {
            node_id,
            owner_id,
            name,
            node_ids: vec![],
            self_closing,
            kind: ElementKind::from_str(name),
            attributes: AttributeStore::default(),
            scope_id: Cell::new(None),
        }
    }

    pub fn is_noscript(&self) -> bool {
        matches!(self.kind, ElementKind::Noscript)
    }

    pub fn is_custom_element(&self) -> bool {
        if matches!(self.kind, ElementKind::Custom) {
            return true;
        };

        self.attributes.get_attribute_by_name("is").is_some()
    }

    pub fn is_video(&self) -> bool {
        matches!(self.kind, ElementKind::Video)
    }

    pub fn is_script(&self) -> bool {
        matches!(self.kind, ElementKind::Script)
    }

    pub fn is_input(&self) -> bool {
        matches!(self.kind, ElementKind::Input)
    }
}

#[derive(Debug)]
pub enum ElementKind {
    Noscript,
    A,
    Abbr,
    Acronym,
    Address,
    Applet,
    Area,
    Article,
    Aside,
    Audio,
    B,
    Base,
    Basefont,
    Bdi,
    Bdo,
    Big,
    Blockquote,
    Body,
    Br,
    Button,
    Canvas,
    Caption,
    Center,
    Cite,
    Code,
    Col,
    Colgroup,
    Data,
    Datalist,
    Dd,
    Del,
    Details,
    Dfn,
    Dialog,
    Dir,
    Div,
    Dl,
    Dt,
    Em,
    Embed,
    Fieldset,
    Figcaption,
    Figure,
    Font,
    Footer,
    Form,
    Frame,
    Frameset,
    H1,
    H2,
    H3,
    H4,
    H5,
    H6,
    Head,
    Header,
    Hgroup,
    Hr,
    Html,
    I,
    Iframe,
    Img,
    Input,
    Ins,
    Kbd,
    Label,
    Legend,
    Li,
    Link,
    Main,
    Map,
    Mark,
    Menu,
    Meta,
    Meter,
    Nav,
    Noframes,
    Object,
    Ol,
    Optgroup,
    Option,
    Output,
    P,
    Param,
    Picture,
    Pre,
    Progress,
    Q,
    Rp,
    Rt,
    Ruby,
    S,
    Samp,
    Script,
    Search,
    Section,
    Select,
    Small,
    Source,
    Span,
    Strike,
    Strong,
    Style,
    Sub,
    Summary,
    Sup,
    Svg,
    Table,
    Tbody,
    Td,
    Template,
    Textarea,
    Tfoot,
    Th,
    Thead,
    Time,
    Title,
    Tr,
    Track,
    Tt,
    U,
    Ul,
    Var,
    Video,
    Wbr,
    Custom,
}

impl ElementKind {
    pub fn from_str(name: &str) -> Self {
        match name {
            "noscript" => Self::Noscript,
            "a" => Self::A,
            "abbr" => Self::Abbr,
            "acronym" => Self::Acronym,
            "address" => Self::Address,
            "applet" => Self::Applet,
            "area" => Self::Area,
            "article" => Self::Article,
            "aside" => Self::Aside,
            "audio" => Self::Audio,
            "b" => Self::B,
            "base" => Self::Base,
            "basefont" => Self::Basefont,
            "bdi" => Self::Bdi,
            "bdo" => Self::Bdo,
            "big" => Self::Big,
            "blockquote" => Self::Blockquote,
            "body" => Self::Body,
            "br" => Self::Br,
            "button" => Self::Button,
            "canvas" => Self::Canvas,
            "caption" => Self::Caption,
            "center" => Self::Center,
            "cite" => Self::Cite,
            "code" => Self::Code,
            "col" => Self::Col,
            "colgroup" => Self::Colgroup,
            "data" => Self::Data,
            "datalist" => Self::Datalist,
            "dd" => Self::Dd,
            "del" => Self::Del,
            "details" => Self::Details,
            "dfn" => Self::Dfn,
            "dialog" => Self::Dialog,
            "dir" => Self::Dir,
            "div" => Self::Div,
            "dl" => Self::Dl,
            "dt" => Self::Dt,
            "em" => Self::Em,
            "embed" => Self::Embed,
            "fieldset" => Self::Fieldset,
            "figcaption" => Self::Figcaption,
            "figure" => Self::Figure,
            "font" => Self::Font,
            "footer" => Self::Footer,
            "form" => Self::Form,
            "frame" => Self::Frame,
            "frameset" => Self::Frameset,
            "h1" => Self::H1,
            "h2" => Self::H2,
            "h3" => Self::H3,
            "h4" => Self::H4,
            "h5" => Self::H5,
            "h6" => Self::H6,
            "head" => Self::Head,
            "header" => Self::Header,
            "hgroup" => Self::Hgroup,
            "hr" => Self::Hr,
            "html" => Self::Html,
            "i" => Self::I,
            "iframe" => Self::Iframe,
            "img" => Self::Img,
            "input" => Self::Input,
            "ins" => Self::Ins,
            "kbd" => Self::Kbd,
            "label" => Self::Label,
            "legend" => Self::Legend,
            "li" => Self::Li,
            "link" => Self::Link,
            "main" => Self::Main,
            "map" => Self::Map,
            "mark" => Self::Mark,
            "menu" => Self::Menu,
            "meta" => Self::Meta,
            "meter" => Self::Meter,
            "nav" => Self::Nav,
            "noframes" => Self::Noframes,
            "object" => Self::Object,
            "ol" => Self::Ol,
            "optgroup" => Self::Optgroup,
            "option" => Self::Option,
            "output" => Self::Output,
            "p" => Self::P,
            "param" => Self::Param,
            "picture" => Self::Picture,
            "pre" => Self::Pre,
            "progress" => Self::Progress,
            "q" => Self::Q,
            "rp" => Self::Rp,
            "rt" => Self::Rt,
            "ruby" => Self::Ruby,
            "s" => Self::S,
            "samp" => Self::Samp,
            "script" => Self::Script,
            "search" => Self::Search,
            "section" => Self::Section,
            "select" => Self::Select,
            "small" => Self::Small,
            "source" => Self::Source,
            "span" => Self::Span,
            "strike" => Self::Strike,
            "strong" => Self::Strong,
            "style" => Self::Style,
            "sub" => Self::Sub,
            "summary" => Self::Summary,
            "sup" => Self::Sup,
            "svg" => Self::Svg,
            "table" => Self::Table,
            "tbody" => Self::Tbody,
            "td" => Self::Td,
            "template" => Self::Template,
            "textarea" => Self::Textarea,
            "tfoot" => Self::Tfoot,
            "th" => Self::Th,
            "thead" => Self::Thead,
            "time" => Self::Time,
            "title" => Self::Title,
            "tr" => Self::Tr,
            "track" => Self::Track,
            "tt" => Self::Tt,
            "u" => Self::U,
            "ul" => Self::Ul,
            "var" => Self::Var,
            "video" => Self::Video,
            "wbr" => Self::Wbr,
            _ => Self::Custom,
        }
    }
}
